name: Run HyperBEAM Tests, from docker image

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    types:
      - opened

jobs:
  build-deps-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Erlang 27 image with deps and HyperBEAM
        run: |
          # set defaults if not in a PR
          if [ "${GITHUB_EVENT_NAME}" != "pull_request" ]; then
            echo "REPO_URL=https://github.com/permaweb/HyperBEAM.git" >> $GITHUB_ENV
            echo "PR_BRANCH=main" >> $GITHUB_ENV
          else
            echo "REPO_URL=${{ github.event.pull_request.head.repo.clone_url }}" >> $GITHUB_ENV
            echo "PR_BRANCH=${{ github.event.pull_request.head.ref }}"       >> $GITHUB_ENV
          fi

          docker build --platform=linux/amd64 \
            --build-arg REPO_URL="$REPO_URL" \
            --build-arg PR_BRANCH="$PR_BRANCH" \
            -t hyperbeam-deps - <<'EOF'
          FROM erlang:27@sha256:b0edce60779cecafd65c1584d2475850f9840460e872d149e1159743a4098d47

          ARG REPO_URL
          ARG PR_BRANCH

          # Install OS packages (git, build tools, etc.)
          RUN apt-get update \
           && apt-get install -y --no-install-recommends \
              git \
              build-essential \
              cmake \
              pkg-config \
              ncurses-dev \
              libssl-dev \
              curl \
              ca-certificates \
           && rm -rf /var/lib/apt/lists/*

          # (Optional) install Rust toolchain
          RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs \
              | sh -s -- -y --default-toolchain stable \
           && echo 'export PATH=/root/.cargo/bin:$PATH' >> /etc/profile

          RUN mkdir -p /hyperbeam
          
          RUN git clone --depth 1 --branch "$PR_BRANCH" "$REPO_URL" /hyperbeam/HyperBEAM

          EOF

      - name: Run Tests
        run: |
          docker run --rm hyperbeam-deps bash -lc "cd /hyperbeam/HyperBEAM && rebar3 eunit"
