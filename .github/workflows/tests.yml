name: Run hb tests

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    types:
      - opened

jobs:
  test:
    runs-on: ubuntu-latest
    name: Install Deps and Run Tests
    strategy:
      matrix:
        otp: ['27.3.3']
        rebar3: ['3.24.0']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Erlang & rebar3
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          rebar3-version: ${{ matrix.rebar3 }}

      - name: Run EUnit
        run: |
          # find all .erl files under src/, handle filenames with spaces safely
          find src -type f -name "*.erl" -print0 | \
          while IFS= read -r -d '' file; do
            module=$(basename "$file" .erl)
            echo "=== Testing module: $module ==="
            rebar3 eunit --module $module
          done

      - name: Notify Slack on Failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          # Determine whether we're in a PR or a push to main
          if [ "${GITHUB_EVENT_NAME}" = "pull_request" ]; then
            TEXT=":x: HyperBEAM tests failed PR #${PR_NUMBER} ${PR_TITLE}: "
          else
            TEXT=":x: HyperBEAM tests failed on main: "
          fi

          # Post to Slack
          curl -X POST https://slack.com/api/chat.postMessage \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            -d "channel=$SLACK_CHANNEL_ID" \
            -d "text=${TEXT} <${RUN_URL}|View test output>"


