name: Run hb tests

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    types:
      - opened

jobs:
  test:
    runs-on: self-hosted
    env:
      ImageOS: ubuntu22
    name: Install Deps and Run Tests
    strategy:
      matrix:
        otp: ['27.3.3']
        rebar3: ['3.24.0']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Erlang & rebar3
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          rebar3-version: ${{ matrix.rebar3 }}

      - name: Install system dependencies
        run: |
          sudo apt-get update \
            && sudo apt-get install -y --no-install-recommends \
              git \
              build-essential \
              cmake \
              pkg-config \
              ncurses-dev \
              libssl-dev \
              curl \
              ca-certificates \
            && sudo rm -rf /var/lib/apt/lists/*


      - name: Install cargo
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -o rustup-init.sh
          sh rustup-init.sh -y --default-toolchain stable
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Run EUnit
        shell: bash
        run: |
          # disable “exit-on-error” so we can aggregate failures
          set +e

          failed=()

          for file in $(find src -type f -name '*.erl'); do
            module=$(basename "$file" .erl)
            echo "=== Testing module: $module ==="
            rebar3 eunit --module $module
            if [ $? -ne 0 ]; then
              failed+=("$module")
            fi
          done

          if [ ${#failed[@]} -gt 0 ]; then
            echo
            echo "❌  The following modules failed their EUnit tests:"
            printf "    • %s\n" "${failed[@]}"
            exit 1
          fi

      - name: Notify Slack on Failure
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          # Determine whether we're in a PR or a push to main
          if [ "${GITHUB_EVENT_NAME}" = "pull_request" ]; then
            TEXT=":x: HyperBEAM tests failed PR #${PR_NUMBER} ${PR_TITLE}: "
          else
            TEXT=":x: HyperBEAM tests failed on main: "
          fi

          # Post to Slack
          curl -X POST https://slack.com/api/chat.postMessage \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            -d "channel=$SLACK_CHANNEL_ID" \
            -d "text=${TEXT} <${RUN_URL}|View test output>"


